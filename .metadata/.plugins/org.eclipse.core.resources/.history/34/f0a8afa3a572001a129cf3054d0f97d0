package com.OopsConcept;

// Following example depicts the Difference between Reference,Object,Instance and Class 

// CLASS: A class is a blueprint 

//Object :  An instance of a Class

//Reference: A reference is an address that indicates 
//          where an object's variables and methods are stored. 
// a) You aren't actually using objects when you assign an object to a variable or pass an object to a method as an argument. 
// b) You aren't even using copies of the objects. Instead, you're using references to those objects

//Instance: 

public class Company {
	
	private String ename;
	
	//Creating Parameterized Constructor
	public Company(String ename){
		this.ename= ename;
		
		
	}
	//Creating Getter and Setter methods
	public String getEname(){
		
		return ename;
	}
	
	public void setEname(String Ename){
		
		this.ename = Ename;
	}

}
